unit Unit2;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  HWebApp, AppSSI, HtmlTxt, HTTPApp, WapCPAdp, DBWeb, Db, DBTables,
  WapActns;

type
  TSessionModule = class(TDataModule)
    WapSession1: TWapSession;
    WebDispatcherAdapter1: TWebDispatcherAdapter;
    DataSetTableProducer1: TDataSetTableProducer;
    Table1: TTable;
    Table1SpeciesNo: TFloatField;
    Table1Category: TStringField;
    Table1Common_Name: TStringField;
    Table1SpeciesName: TStringField;
    Table1Lengthcm: TFloatField;
    Table1Length_In: TFloatField;
    Table1Notes: TMemoField;
    DefaultAction: TWapAction;
    PageProducer1: TPageProducer;
    DemoDelphiSupport: TWapAction;
    procedure WebDispatcherAdapter1WebActionItem1Action(Sender: TObject;
      Request: TWebRequest; Response: TWebResponse; var Handled: Boolean);
    procedure PageProducer1HTMLTag(Sender: TObject; Tag: TTag;
      const TagString: String; TagParams: TStrings;
      var ReplaceText: String);
    procedure WebDispatcherAdapter1WebActionItem2Action(Sender: TObject;
      Request: TWebRequest; Response: TWebResponse; var Handled: Boolean);
    procedure DemoDelphiSupportExecute(Sender: TObject;
      Request: THttpRequest; Response: THttpResponse; const Verb,
      Value: String; Params: TVariantList; var Handled: Boolean);
    procedure DefaultActionExecute(Sender: TObject; Request: THttpRequest;
      Response: THttpResponse; const Verb, Value: String;
      Params: TVariantList; var Handled: Boolean);
  private
    { Private declarations }
    function GetRequest: THttpRequest;
    function GetResponse: THttpResponse;
  public
    { Public declarations }
    property Request: THttpRequest read GetRequest;
    property Response: THttpResponse read GetResponse;
  end;

var
  SessionModule: TSessionModule;

implementation

{$R *.DFM}

function TSessionModule.GetRequest: THttpRequest;
begin
  Result := WapSession1.Request;
end;

function TSessionModule.GetResponse: THttpResponse;
begin
  Result := WapSession1.response;
end;

procedure TSessionModule.WebDispatcherAdapter1WebActionItem1Action(
  Sender: TObject; Request: TWebRequest; Response: TWebResponse;
  var Handled: Boolean);
begin
    Response.Content := DataSetTableProducer1.Content;
end;

procedure TSessionModule.PageProducer1HTMLTag(Sender: TObject; Tag: TTag;
  const TagString: String; TagParams: TStrings; var ReplaceText: String);
begin
    if (TagString = 'CurrentTime') then
        ReplaceText := DateTimeToStr(Now);
end;

procedure TSessionModule.WebDispatcherAdapter1WebActionItem2Action(
  Sender: TObject; Request: TWebRequest; Response: TWebResponse;
  var Handled: Boolean);
begin
    Response.Content := PageProducer1.Content;
end;

procedure TSessionModule.DemoDelphiSupportExecute(Sender: TObject;
  Request: THttpRequest; Response: THttpResponse; const Verb,
  Value: String; Params: TVariantList; var Handled: Boolean);
begin
    Writeln(Response.TextOut, '<p>This text was generated by the WebApp action.');
    Writeln(Response.TextOut, '<p>However, this was generated by Delphi 3 WebModules code :');
    Writeln(Response.TextOut, '<br>');
    WebDispatcherAdapter1.Execute;
end;

procedure TSessionModule.DefaultActionExecute(Sender: TObject;
  Request: THttpRequest; Response: THttpResponse; const Verb,
  Value: String; Params: TVariantList; var Handled: Boolean);
begin
    with Response do begin
        Writeln(TextOut, 'Click on one the following to demonstrate WebApp''s support for');
        Writeln(TextOut, 'the Delphi 3 WebModules technology:');
        Writeln(TextOut, '<UL>');
        Writeln(TextOut, '<LI><A HREF="' + Request.ScriptName + '/DelphiSupport/TableProducer' + '">TableProducer Demo</A>');
        Writeln(TextOut, '</UL>');
    end;
end;

end.
